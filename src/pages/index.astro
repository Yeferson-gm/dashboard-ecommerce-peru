---
import PublicLayout from "@/layouts/PublicLayout.astro";
---

<PublicLayout>
        <div class="min-h-screen relative">
        <!-- Blue Background Section - Only top half -->
        <div class="gradient-bg w-full absolute top-0 left-0 z-0 h-1/2"></div>
        
        <div class="container mx-auto z-10 flex flex-col lg:flex-row items-start justify-between relative py-4 lg:py-0 px-0 lg:px-8 lg:min-h-screen">
            <!-- Left Side - Text Content -->
            <div class="w-full lg:w-1/2 text-white px-3 lg:px-12 mb-10 lg:mb-0 text-center lg:text-left lg:self-start lg:mt-16">                
                <!-- Content -->
                <div>
                    <h1 class="text-4xl lg:text-7xl font-bold mb-4 lg:mb-6 mt-0">Bienvenido a Capibara Shop</h1>
                    <p class="text-base lg:text-xl opacity-90 leading-relaxed max-w-md mx-auto lg:mx-0">
                        Inicia sesión en tu cuenta para gestionar tus productos y categorías.
                    </p>
                </div>
            </div>

            <!-- Right Side - Form Section -->
            <div class="w-full lg:w-1/2 flex justify-center items-center px-2 lg:px-8 -mt-0 lg:mt-0 lg:self-center">
                <div class="w-full max-w-md">
                    <div class="bg-white rounded-xl lg:rounded-2xl shadow-xl p-4 lg:p-8 mx-3 lg:mx-0">
                    <h2 class="text-2xl lg:text-3xl font-bold text-gray-900 mb-6 lg:mb-8 text-center">Empezar a gestionar</h2>
                    
                    <!-- Social Login Buttons -->
                    <div class="space-y-3 mb-6">
                        <button class="w-full flex items-center justify-center px-4 py-3 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors">
                            <svg class="w-5 h-5 mr-3" viewBox="0 0 24 24">
                                <path fill="#4285F4" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
                                <path fill="#34A853" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
                                <path fill="#FBBC05" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
                                <path fill="#EA4335" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
                            </svg>
                            <span class="text-gray-700 font-medium">Iniciar sesión con Google</span>
                        </button>
                    </div>
                    
                    <!-- Form Fields -->
                    <form class="space-y-4">
                        <div>
                            <label class="block text-sm font-bold text-gray-700 mb-2">Nombre de usuario</label>
                            <div class="relative">
                                <input 
                                    type="text" 
                                    placeholder="Ingresa tu nombre de usuario" 
                                    class="w-full px-4 py-3 pr-10 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all"
                                >
                                <i class="fas fa-user absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
                            </div>
                        </div>
                        
                        <div>
                            <label class="block text-sm font-bold text-gray-700 mb-2">Contraseña</label>
                            <div class="relative">
                                <input 
                                    type="password" 
                                    placeholder="Ingresa tu contraseña" 
                                    class="w-full px-4 py-3 pr-10 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all"
                                    id="password"
                                >
                                <button 
                                    type="button" 
                                    onclick="togglePassword()"
                                    class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600"
                                >
                                    <i class="fas fa-eye" id="toggleIcon"></i>
                                </button>
                            </div>
                        </div>
                        
                        <div class="text-right">
                            <a href="dashboard" class="text-blue-600 hover:text-blue-700 cursor-pointer font-bold text-sm">
                                ¿Olvidaste tu contraseña?
                            </a>
                        </div>
                        
                        <button 
                            type="submit" 
                            class="w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-4 rounded-lg transition-colors mt-6"
                        >
                            Iniciar sesión
                        </button>
                    </form>
                    
                    <div class="text-center mt-6">
                        <span class="text-gray-600">¿No tienes una cuenta? </span>
                        <a href="#" class="text-blue-600 hover:text-blue-700 cursor-pointer font-bold">Regístrate aquí</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script is:inline>
        function togglePassword() {
            const password = document.getElementById('password');
            const toggleIcon = document.getElementById('toggleIcon');
            
            if (password.type === 'password') {
                password.type = 'text';
                toggleIcon.classList.remove('fa-eye');
                toggleIcon.classList.add('fa-eye-slash');
            } else {
                password.type = 'password';
                toggleIcon.classList.remove('fa-eye-slash');
                toggleIcon.classList.add('fa-eye');
            }
        }
    </script>
    <style is:inline>
        .gradient-bg {
            background: linear-gradient(135deg, #4F46E5 0%, #7C3AED 100%);
        }
    </style>



    <div>
        <button onclick="obtenerProductos()">Obtener Productos</button>
    </div>
    
    <div id="loading" style="display: none;">
        <p>Cargando productos...</p>
    </div>
    
    <div id="error" style="display: none;">
        <h3>Error</h3>
        <p id="errorMessage"></p>
        <p><strong>Verifica que:</strong></p>
        <ul>
            <li>El servidor esté ejecutándose en el puerto 3002</li>
            <li>La URL de la API sea correcta</li>
            <li>No haya problemas de CORS</li>
        </ul>
    </div>
    
    <div id="info" style="display: none;">
        <h2>Información de la Respuesta</h2>
        <p>Total de productos: <span id="total"></span></p>
        <p>Página actual: <span id="paginaActual"></span></p>
        <p>Total de páginas: <span id="totalPaginas"></span></p>
    </div>
    
    <div id="productos">
        <!-- Los productos se crearán dinámicamente aquí -->
    </div>

    <script is:inline>
        // URL base de la API
        const API_BASE_URL = 'http://localhost:3002/api/v1/productos';
        
        async function obtenerProductos() {
            // Mostrar loading
            document.getElementById('loading').style.display = 'block';
            document.getElementById('error').style.display = 'none';
            document.getElementById('info').style.display = 'none';
            document.getElementById('productos').innerHTML = '';
            
            try {
                const response = await fetch(API_BASE_URL);
                
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                
                const data = await response.json();
                
                // Ocultar loading
                document.getElementById('loading').style.display = 'none';
                
                // Mostrar información de la respuesta
                mostrarInfoRespuesta(data);
                
                // Crear y mostrar productos
                crearProductos(data);
                
            } catch (error) {
                // Ocultar loading
                document.getElementById('loading').style.display = 'none';
                
                // Mostrar error
                document.getElementById('error').style.display = 'block';
                if (error.message.includes('Failed to fetch')) {
                    document.getElementById('errorMessage').textContent = 
                        'No se pudo conectar al servidor. Verifica que esté ejecutándose en http://localhost:3002';
                } else {
                    document.getElementById('errorMessage').textContent = error.message;
                }
                
                console.error('Error al obtener productos:', error);
            }
        }
        
        function mostrarInfoRespuesta(data) {
            document.getElementById('info').style.display = 'block';
            document.getElementById('total').textContent = Array.isArray(data) ? data.length : 0;
            document.getElementById('paginaActual').textContent = '1';
            document.getElementById('totalPaginas').textContent = '1';
        }
        
        function crearProductos(productos) {
            const contenedor = document.getElementById('productos');
            
            if (!Array.isArray(productos)) {
                contenedor.innerHTML = '<p>Error: Los datos recibidos no son un array de productos</p>';
                return;
            }
            
            productos.forEach((producto, index) => {
                crearProductoCompleto(contenedor, producto, index);
            });
        }
        
        function crearProductoCompleto(contenedor, producto, index) {
            const productoDiv = document.createElement('div');
            productoDiv.id = `producto${index}`;
            
            // Crear el HTML completo con todos los datos
            let html = `
                <h3>Producto ${index + 1}</h3>
                <p>ID: ${producto.id || 'N/A'}</p>
                <p>Título: ${producto.title || 'N/A'}</p>
                <p>Precio: ${producto.price || 'N/A'}</p>
                ${producto.mainImage ? `<img src="${producto.mainImage}" alt="Imagen del producto" width="200">` : '<p>Sin imagen</p>'}
                
                <h4>Categoría</h4>
                <p>ID Categoría: ${producto.categoria_id || 'N/A'}</p>
                <p>Nombre Categoría: ${producto.categoria_nombre || 'N/A'}</p>
                
                <h4>Tienda</h4>
                <p>ID Tienda: ${producto.tienda_id || 'N/A'}</p>
                <p>Nombre Tienda: ${producto.tienda_nombre || 'N/A'}</p>
                
                <h4>Información adicional</h4>
                <p>Fecha: ${producto.fecha || 'N/A'}</p>
                <p>Hora: ${producto.hora || 'N/A'}</p>
                <p>Fecha de creación: ${producto.fecha_creacion || 'N/A'}</p>
                
                <h4>Colores</h4>
                <div>
            `;
            
            // Agregar colores
            const colores = producto.colors || [];
            if (colores && colores.length > 0) {
                colores.forEach((color, colorIndex) => {
                    html += `
                        <div>
                            <p>Color ${colorIndex + 1} - ID: ${color.id || 'N/A'}</p>
                            <p>Nombre: ${color.name || 'N/A'}</p>
                            ${color.image ? `<img src="${color.image}" alt="Color" width="50">` : ''}
                        </div>
                    `;
                });
            } else {
                html += '<p>No hay colores disponibles</p>';
            }
            
            html += '</div><h4>Tallas</h4><div>';
            
            // Agregar tallas
            const tallas = producto.sizes || [];
            if (tallas && tallas.length > 0) {
                tallas.forEach((talla, tallaIndex) => {
                    html += `<p>Talla ${tallaIndex + 1} - ID: ${talla.id || 'N/A'} - Nombre: ${talla.name || 'N/A'}</p>`;
                });
            } else {
                html += '<p>No hay tallas disponibles</p>';
            }
            
            html += '</div><h4>Etiquetas</h4><div>';
            
            // Agregar etiquetas
            const etiquetas = producto.etiquetas || [];
            if (etiquetas && etiquetas.length > 0) {
                etiquetas.forEach((etiqueta, etiquetaIndex) => {
                    html += `<p>Etiqueta ${etiquetaIndex + 1} - ID: ${etiqueta.id || 'N/A'} - Nombre: ${etiqueta.name || 'N/A'}</p>`;
                });
            } else {
                html += '<p>No hay etiquetas disponibles</p>';
            }
            
            html += '</div><hr>';
            
            productoDiv.innerHTML = html;
            contenedor.appendChild(productoDiv);
        }
    </script>

</PublicLayout>